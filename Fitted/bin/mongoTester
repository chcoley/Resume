#!/usr/bin/env node

const { User, Closet, Fit } = require("../models");

/*************************************************
 * TESTING FITs
 * 
 */
// async function getOutfitsByName(name) {
//   let owner = await User.findByLogin("jeriel");
//   console.log(owner);
//   let outfits = (await Fit.findOne({ owner })).outfits
//   console.log(outfits);
//   }

// getOutfitsByName("jeriel")

/*************************************************
 * ADDING FITs clothing
 * 
 */
// async function addFit({ owner, shoes, pants, shirt }) {
//   const fit = await Fit.findOneOrCreate({ owner });
//   fit.outfits.push({ shoes, pants, shirt });
//   return fit.save();
// }

// async function addFakeFitForUser({ name }) {
//   const owner = await User.findOne({ username: name });

//   const shoes = { name: "black shoes", image: "blackvans.jpeg" };
//   const pants = { name: "blue jeans", image: "jean.png" };
//   const shirt = { name: "white shirt", image: "hoodie.png" };

//   const fit = await addFit({ owner, shoes, pants, shirt });
//   return { fit, owner };
// }

// async function addFitsForUser({ name, outfits }) {
//   const owner = await User.findOne({ username: name });

//   outfits.forEach(async ({ shoes, pants, shirt }) => {
//     await addFit({ owner, shoes, pants, shirt });
//   });
// }

// const outfits = [
//   {
//     shoes: { image: "blackvans.jpeg", name: "black vans" },
//     pants: { image: "jean.png", name: "jeans" },
//     shirt: { image: "burberry.png", name: "burberry shirt" }
//   },
//   {
//     shoes: { image: "blackvans.jpeg", name: "black vans" },
//     pants: { image: "joggers.png", name: "joggers" },
//     shirt: { image: "whitetee.png", name: "white tee" }
//   },
//   {
//     shoes: { image: "whiteshoes.jpg", name: "white shoes" },
//     pants: { image: "joggers.png", name: "joggers" },
//     shirt: { image: "bluegucci.jpg", name: "blue gucci shirt" }
//   }
// ];

// addFitsForUser({ name: "jeriel", outfits });

/*************************************************
 * ADDING USERs
 */
// /**
//  * creates a new user and returns the document with their data from the database
//  * @param username of the user
//  * @param email of the user
//  */
// async function createUser({ username, email }) {
//   return await User.create({ username, email });
// }

// /**
//  * creates a closet for a new user.  expects an owner object from Mongo
//  * @param owner object from the database
//  * @returns a new object with the user and their closet
//  */
// async function createCloset({ owner }) {
//   // make a new empty closet that's connected to its owner
//   const closet = await Closet.create({ owner });

//   // connect the user object with the new closet
//   const user = await User.findById(owner._id);
//   user.closet = closet;
//   await user.save();

//   // return the closet
//   return closet;
// }

// /**
//  * register a new user and create an empty closet for them
//  * @param name of the new user
//  * @param email of the new user
//  * @returns object with user and closet properties
//  */
// async function registerNewUser({ name, email }) {
//   const owner = await createUser({ username: name, email });
//   const closet = await createCloset({ owner });
//   return { user, closet }
// }

// console.log(registerNewUser({ name: "jeriel2", email: "j@123.com" }));

